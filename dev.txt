在处理点击按钮开始计时功能，遇到很多问题，
$('#id').click(function(){});没有放到 $().ready(function(){});中在加载页面的时候就执行了，点击按钮的时候就不执行了。
搜索问题的时候搜到了，不过没有这么处理，直到第二天试着把click函数放到ready中才解决了。
为什么setInterval 只执行了一次？？
http://q.cnblogs.com/q/63658/

jquery $("#id").click()
http://zhidao.baidu.com/link?url=Oj5a9K_232S7z7Ud2Vd9CV2PBHdilYjMApDqjNTsPtGCxpdVTA3gdInsO7MVFq1TQV1oPogQKmi367c8Ky-qpK

大侠们：请问在编写jquery的时候我直接写$("#one").click(function(){alert("..........")}); 为什么不可以呢？ 必须:$(document).ready(function(){$("#one").click(function() {alert("Hello world!");});}); 这样写呢? 可以不添加$(document).ready()这个事件不呢？

1、在$("#one").click(function() 这样的写法中，如不在 $(function() 或$(document).ready(function()中，它被执行的时间是在body加载之前，所以这时，$('#one')取不到内容，所以无效。
2、可以不添加$(document).ready()，当然也就不能用$("#one").click(function() 这种写法了。 jQuery也可以是非侵入式的，可以用传统方式写事件： function oneclick() {} < id='one' onclick='oneclick();' />

jquery 传 json对象 post()不能设置 contentType jquery unsupported media type 415error
http://blog.csdn.net/up1up2up3/article/details/8439345
JSON.stringify(saveData)

解决Spring MVC @ResponseBody返回中文字符串乱码问题
http://www.cnblogs.com/dyllove98/p/3180158.html


PO VO BO DTO POJO DAO之间的关系
J2EE开发中大量的专业缩略语很是让人迷惑，尤其是跟一些高手讨论问题的时候，三分钟就被人家满口的专业术语喷晕了，PO VO BO DTO POJO DAO，一大堆的就来了（听过老罗对这种现象的批判的朋友会会心一笑）。
      首先声明偶也不是什么高手，以下总结都是自己的体会。不对之处请您多指教。
PO：
persistant object持久对象

最形象的理解就是一个PO就是数据库中的一条记录。
好处是可以把一条记录作为一个对象处理，可以方便的转为其它对象。

BO：
business object业务对象

主要作用是把业务逻辑封装为一个对象。这个对象可以包括一个或多个其它的对象。
比如一个简历，有教育经历、工作经历、社会关系等等。
我们可以把教育经历对应一个PO，工作经历对应一个PO，社会关系对应一个PO。
建立一个对应简历的BO对象处理简历，每个BO包含这些PO。
这样处理业务逻辑时，我们就可以针对BO去处理。

VO ：
value object值对象
ViewObject表现层对象

主要对应界面显示的数据对象。对于一个WEB页面，或者SWT、SWING的一个界面，用一个VO对象对应整个界面的值。

DTO ：
Data Transfer Object数据传输对象
主要用于远程调用等需要大量传输对象的地方。
比如我们一张表有100个字段，那么对应的PO就有100个属性。
但是我们界面上只要显示10个字段，
客户端用WEB service来获取数据，没有必要把整个PO对象传递到客户端，
这时我们就可以用只有这10个属性的DTO来传递结果到客户端，这样也不会暴露服务端表结构.到达客户端以后，如果用这个对象来对应界面显示，那此时它的身份就转为VO

POJO ：
plain ordinary java object 简单ava对象
个人感觉POJO是最参见最多变的对象，是一个中间对象，也是我们最常打交道的对象。

一个POJO持久化以后就是PO
直接用它传递、传递过程中就是DTO
直接用来对应表示层就是VO

DAO：
data access object数据访问对象
这个大家最熟悉，和上面几个O区别最大，基本没有互相转化的可能性和必要.
主要用来封装对数据库的访问。通过它可以把POJO持久化为PO，用PO组装出来VO、DTO


        总结下我认为一个对象究竟是什么O要看具体环境，在不同的层、不同的应用场合，对象的身份也不一样，而且对象身份的转化也是很自然的。就像你对老婆来说就是老公，对父母来说就是子女。设计这些概念的初衷不是为了唬人而是为了更好的理解和处理各种逻辑，让大家能更好的去用面向对象的方式处理问题.


    生成Test类
    ctrl+shift +T
    Generate Test 插件 的 run Configuration 不知道在哪里配

    many-to-one  one-to-many 双向关联 如果不设mappedby 两个表都会关联，并生成一个中间表 ，我晕